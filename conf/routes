# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                           controllers.Application.index
GET     /javascriptRoutes                           controllers.Application.javascriptRoutes

# #########################################################
# GALLERY
# #########################################################

GET     /gallery                                    controllers.gallery.Galleries.view(categoryId: Int = -1)
GET     /gallery/create/:categoryId                 controllers.gallery.GalleryForms.create(categoryId: Int)
GET     /gallery/edit/:galleryId                    controllers.gallery.GalleryForms.edit(galleryId: Int)
GET     /gallery/previous/:galleryId                controllers.gallery.GalleryForms.previousGallery(galleryId: Int)
GET     /gallery/next/:galleryId                    controllers.gallery.GalleryForms.nextGallery(galleryId: Int)
GET     /gallery/:categoryId                        controllers.gallery.Galleries.view(categoryId: Int)
GET     /gallery/refresh/:categoryId                controllers.gallery.Galleries.refresh(categoryId: Int)
GET     /gallery/up/:categoryId/:galleryId          controllers.gallery.Galleries.up(categoryId: Int, galleryId: Int)
GET     /gallery/down/:categoryId/:galleryId        controllers.gallery.Galleries.down(categoryId: Int, galleryId: Int)
GET     /gallery/onOffLine/:galleryId               controllers.gallery.Galleries.onOffLine(galleryId: Int)

POST    /gallery/save                               controllers.gallery.GalleryForms.save

GET     /galleryPicList/view/:galleryId             controllers.gallery.GalleryPicList.view(galleryId: Int)
GET     /galleryPicList/select/:galleryId/:indexes  controllers.gallery.GalleryPicList.viewAndSelect(galleryId: Int, indexes: String)
GET     /galleryPicList/thumbnail/:galleryId/:index controllers.gallery.GalleryPicList.changeThumbnail(galleryId: Int, index: Int)

POST    /galleryPicList/save                        controllers.gallery.GalleryPicList.save

GET     /galleryPicComment/:galleryId/:index        controllers.gallery.GalleryPicComments.view(galleryId: Int, index: Int)
POST    /galleryPicComment/save                     controllers.gallery.GalleryPicComments.save

GET     /galleryPicSelection/:galleryId                             controllers.gallery.GalleryPicSelection.view(galleryId: Int, parentFolder: String = "", subFolder: String = "")
GET     /galleryPicSelection/:galleryId/:parentFolder               controllers.gallery.GalleryPicSelection.view(galleryId: Int, parentFolder: String, subFolder: String = "")
GET     /galleryPicSelection/:galleryId/:parentFolder/:subFolder    controllers.gallery.GalleryPicSelection.view(galleryId: Int, parentFolder: String, subFolder: String)

POST    /galleryPicSelection/save                   controllers.gallery.GalleryPicSelection.save

# #########################################################
# CATEGORY
# #########################################################

GET     /category                           controllers.category.Categories.view
GET     /category/refresh                   controllers.category.Categories.refresh
GET     /category/create                    controllers.category.CategoryForms.create
GET     /category/edit/:categoryId          controllers.category.CategoryForms.edit(categoryId: Int)
GET     /category/up/:categoryId            controllers.category.Categories.up(categoryId: Int)
GET     /category/down/:categoryId          controllers.category.Categories.down(categoryId: Int)
GET     /category/onOffline/:categoryId     controllers.category.Categories.onOffLine(categoryId: Int)

POST    /category/save                      controllers.category.CategoryForms.save

# #########################################################
# STOCK OF PICTURE
# #########################################################

GET     /picture                            controllers.picture.Pictures.view(parentFolder: String = "", subFolder: String = "")
GET     /picture/refresh                    controllers.picture.Pictures.refresh
GET     /picture/:parentFolder              controllers.picture.Pictures.view(parentFolder: String, subFolder: String = "")
GET     /picture/:parentFolder/:subFolder   controllers.picture.Pictures.view(parentFolder: String, subFolder: String)

# #########################################################
# REQUIRED BY SECURESOCIAL
# #########################################################

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.at(path="/public", file)
